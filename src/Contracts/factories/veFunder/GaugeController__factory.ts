/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  GaugeController,
  GaugeControllerInterface,
} from "../../veFunder/GaugeController";

const _abi = [
  {
    name: "add_gauge",
    outputs: [],
    inputs: [
      {
        type: "address",
        name: "addr",
      },
      {
        type: "int128",
        name: "gauge_type",
      },
      {
        type: "uint256",
        name: "weight",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class GaugeController__factory {
  static readonly abi = _abi;
  static createInterface(): GaugeControllerInterface {
    return new Interface(_abi) as GaugeControllerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): GaugeController {
    return new Contract(address, _abi, runner) as unknown as GaugeController;
  }
}
